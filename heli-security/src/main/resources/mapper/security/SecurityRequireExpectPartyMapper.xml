<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.security.mapper.SecurityRequireExpectPartyMapper">

    <resultMap type="SecurityRequireExpectParty" id="SecurityRequireExpectPartyResult">
        <result property="id"    column="id"    />
        <result property="partyInvolved"    column="party_involved"    />
        <result property="demand"    column="demand_"    />
        <result property="monitoringIndicators"    column="monitoring_indicators"    />
        <result property="monitoringFrequency"    column="monitoring_frequency"    />
        <result property="monitoringDepartment"    column="monitoring_department"    />
        <result property="approvalTime"    column="approval_time"    />
        <result property="fillTime"    column="fill_time"    />
        <result property="status"    column="status"    />
        <result property="statusDepartment"    column="status_department"    />
        <result property="relatedId"    column="related_id"    />
    </resultMap>

    <sql id="selectSecurityRequireExpectPartyVo">
        select id, party_involved, demand_, monitoring_indicators, monitoring_frequency, monitoring_department, approval_time, fill_time, status, status_department, related_id from security_require_expect_party
    </sql>

    <select id="selectSecurityRequireExpectPartyList" parameterType="SecurityRequireExpectParty" resultMap="SecurityRequireExpectPartyResult">
        <include refid="selectSecurityRequireExpectPartyVo"/>
        <where>
            <if test="partyInvolved != null  and partyInvolved != ''"> and party_involved = #{partyInvolved}</if>
            <if test="demand != null  and demand != ''"> and demand_ = #{demand}</if>
            <if test="monitoringIndicators != null  and monitoringIndicators != ''"> and monitoring_indicators = #{monitoringIndicators}</if>
            <if test="monitoringFrequency != null  and monitoringFrequency != ''"> and monitoring_frequency = #{monitoringFrequency}</if>
            <if test="monitoringDepartment != null  and monitoringDepartment != ''"> and monitoring_department = #{monitoringDepartment}</if>
            <if test="approvalTime != null "> and approval_time = #{approvalTime}</if>
            <if test="fillTime != null "> and fill_time = #{fillTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="statusDepartment != null  and statusDepartment != ''"> and status_department = #{statusDepartment}</if>
            <if test="relatedId != null"> and related_id = #{relatedId}</if>
        </where>
    </select>

    <select id="selectSecurityRequireExpectPartyById" parameterType="Long" resultMap="SecurityRequireExpectPartyResult">
        <include refid="selectSecurityRequireExpectPartyVo"/>
        where id = #{id}
    </select>
    <select id="selectLatestImportedRecords" resultType="com.ruoyi.security.domain.SecurityRequireExpectParty">
        <include refid="selectSecurityRequireExpectPartyVo"/>
        where related_id is null
        order by fill_time desc
        limit 10
    </select>

    <insert id="insertSecurityRequireExpectParty" parameterType="SecurityRequireExpectParty" useGeneratedKeys="true" keyProperty="id">
        insert into security_require_expect_party
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="partyInvolved != null">party_involved,</if>
            <if test="demand != null">demand_,</if>
            <if test="monitoringIndicators != null">monitoring_indicators,</if>
            <if test="monitoringFrequency != null">monitoring_frequency,</if>
            <if test="monitoringDepartment != null">monitoring_department,</if>
            <if test="approvalTime != null">approval_time,</if>
            <if test="fillTime != null">fill_time,</if>
            <if test="status != null">status,</if>
            <if test="statusDepartment != null">status_department,</if>
            <if test="relatedId != null">related_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="partyInvolved != null">#{partyInvolved},</if>
            <if test="demand != null">#{demand},</if>
            <if test="monitoringIndicators != null">#{monitoringIndicators},</if>
            <if test="monitoringFrequency != null">#{monitoringFrequency},</if>
            <if test="monitoringDepartment != null">#{monitoringDepartment},</if>
            <if test="approvalTime != null">#{approvalTime},</if>
            <if test="fillTime != null">#{fillTime},</if>
            <if test="status != null">#{status},</if>
            <if test="statusDepartment != null">#{statusDepartment},</if>
            <if test="relatedId != null">#{relatedId},</if>
        </trim>
    </insert>

    <update id="updateSecurityRequireExpectParty" parameterType="SecurityRequireExpectParty">
        update security_require_expect_party
        <trim prefix="SET" suffixOverrides=",">
            <if test="partyInvolved != null">party_involved = #{partyInvolved},</if>
            <if test="demand != null">demand_ = #{demand},</if>
            <if test="monitoringIndicators != null">monitoring_indicators = #{monitoringIndicators},</if>
            <if test="monitoringFrequency != null">monitoring_frequency = #{monitoringFrequency},</if>
            <if test="monitoringDepartment != null">monitoring_department = #{monitoringDepartment},</if>
            <if test="approvalTime != null">approval_time = #{approvalTime},</if>
            <if test="fillTime != null">fill_time = #{fillTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="statusDepartment != null">status_department = #{statusDepartment},</if>
            <if test="relatedId != null">related_id = #{relatedId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSecurityRequireExpectPartyById" parameterType="Long">
        delete from security_require_expect_party where id = #{id}
    </delete>

    <delete id="deleteSecurityRequireExpectPartyByIds" parameterType="String">
        delete from security_require_expect_party where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 更新最近导入数据的关联ID -->
    <update id="updateLatestImportedRelatedId" parameterType="Long">
        UPDATE security_require_expect_party
        SET related_id = #{fileManagementId}
        WHERE related_id IS NULL
        AND fill_time >= (
            SELECT IFNULL(
                (
                    SELECT MIN(fill_time)
                    FROM security_require_expect_party
                    WHERE related_id IS NULL
                ),
                (SELECT MAX(fill_time) FROM security_require_expect_party)
            )
        )
    </update>
</mapper>